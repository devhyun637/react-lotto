{"version":3,"sources":["components/_commons/Button/Button.style.js","components/_commons/Button/Button.js","components/_commons/Flex/Flex.style.js","components/_commons/Flex/Flex.js","components/_commons/Form/Form.style.js","components/_commons/Form/Form.js","components/_commons/Input/Input.style.js","components/_commons/Input/Input.js","components/_commons/Modal/Modal.style.js","components/CloseButton/CloseButton.style.js","components/CloseButton/CloseButton.js","components/_commons/Modal/Modal.js","components/LottoListContainer/ToggleButton/ToggleButton.style.js","components/LottoListContainer/ToggleButton/ToggleButton.js","components/LottoListContainer/LottoListContainer.style.js","components/LottoListContainer/LottoListContainer.js","constants/lotto.js","services/winningResult.js","components/LottoRewardsContainer/Table/Table.style.js","components/LottoRewardsContainer/Table/Table.js","components/LottoRewardsContainer/LottoRewardsContainer.style.js","components/LottoRewardsContainer/LottoRewardsContainer.js","constants/messages.js","components/PurchaseContainer/PurchaseContainer.style.js","components/PurchaseContainer/PurchaseContainer.js","components/WinningNumbersContainer/BonusNumberInput/BonusNumberInput.style.js","components/WinningNumbersContainer/BonusNumberInput/BonusNumberInput.js","components/WinningNumbersContainer/NumberList/NumberList.style.js","components/WinningNumbersContainer/NumberList/NumberList.js","components/WinningNumbersContainer/WinningNumbersContainer.style.js","components/WinningNumbersContainer/WinningNumbersContainer.js","hooks/useSelectNumbers.js","App.style.js","App.js","hooks/useModal.js","services/lottoPurchase.js","utils/index.js","index.js"],"names":["BUTTON_SIZE","SMALL","MEDIUM","LARGE","StyledButton","styled","button","size","css","Button","props","children","rest","defaultProps","type","FlexBox","div","flexFlow","justifyContent","alignItems","flexWrap","flexBasis","flexGrow","flexShrink","Flex","StyledForm","form","Form","forwardRef","ref","prototype","onSubmit","PropTypes","func","object","StyledInput","input","Input","onChange","string","isRequired","name","placeholder","required","bool","disabled","autoFocus","min","number","max","step","ModalSection","section","ModalInnerDiv","HiddenButtonName","span","ModalCloseButton","onClick","aria-label","aria-hidden","viewBox","d","Modal","role","aria-modal","aria-labelledby","currentTarget","target","ToggleButtonInput","ToggleButtonLabel","label","ToggleButtonSpan","ShowNumberToggleButton","id","htmlFor","Section","LottoList","ul","isShowNumbers","LottoItem","li","LottoNumberDetails","LottoListContainer","lottos","useState","setIsShowNumbers","length","map","lotto","idx","join","LOTTO","RANK","PROFIT","MATCH_COUNT","RESULT_TABLE","getTotalProfit","counts","totalProfit","filter","count","reduce","sum","getProfit","getRank","cost","rank","Table","table","RewardTable","profitResults","ranks","matchingCount","reward","wins","forEach","getLottoProfitResult","Object","values","getRewardResults","Title","h2","ProfitMessage","p","LottoRewardsContainer","winningNumbers","isMatchedBonus","includes","bonusNumber","numbers","getMatchedCounts","toFixed","MESSAGE","formCss","inputCss","PurchaseContainer","formRef","useRef","inputRef","useEffect","current","reset","focus","e","preventDefault","elements","price","value","BonusNumberWrapper","InputCss","BonusNumberInput","Ul","Label","Checkbox","NumberList","handleSelectNumbers","Number","Array","from","_","checked","FormCss","WinningNumbersContainer","setNumbers","pickedNumber","prevNumbers","newNumbers","find","alert","useSelectNumbers","MainSection","WidthFullDiv","ModalInnerCss","App","setLottos","setWinningNumbers","isModalOpen","setIsModalOpen","useModal","handleModalOpen","handleModalClosed","flexDirection","inputPrice","lottoCount","Math","floor","start","end","Set","add","random","sort","a","b","createLottos","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1480d07.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const BUTTON_SIZE = {\n  SMALL: {\n    'min-width': '20%',\n  },\n  MEDIUM: {\n    'min-width': '60%',\n  },\n  LARGE: {\n    'min-width': '80%',\n  },\n};\n\nexport const StyledButton = styled.button`\n  height: 36px;\n  padding: 0 16px;\n  border-radius: 4px;\n  outline: 0;\n  border-style: none;\n  cursor: pointer;\n\n  color: #fce9e9;\n  background-color: #c71f1f;\n  border-color: #c71f1f;\n\n  ${({ size }) => BUTTON_SIZE[size] || BUTTON_SIZE.SMALL}\n  ${({ css }) => css}\n\n  &:disabled {\n    cursor: not-allowed;\n    background-color: #d3c5c5;\n    border-color: #d3c5c5;\n  }\n`;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { StyledButton } from './Button.style';\n\nexport const Button = props => {\n  const { children, ...rest } = props;\n\n  return <StyledButton {...rest}>{children}</StyledButton>;\n};\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  value: PropTypes.string,\n  name: PropTypes.string,\n\n  size: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: 'submit',\n  size: 'SMALL',\n};\n","import styled from 'styled-components';\n\nexport const FlexBox = styled.div`\n  display: flex;\n\n  flex-flow: ${props => props.flexFlow};\n  justify-content: ${props => props.justifyContent};\n  align-items: ${props => props.alignItems};\n  flex-wrap: ${props => props.flexWrap};\n  flex-basis: ${props => props.flexBasis};\n  flex-grow: ${props => props.flexGrow};\n  flex-shrink: ${props => props.flexShrink};\n\n  ${({ css }) => css}\n`;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { FlexBox } from './Flex.style';\n\nexport const Flex = props => {\n  const { children, ...rest } = props;\n\n  return <FlexBox {...rest}>{children}</FlexBox>;\n};\n\nFlex.propTypes = {\n  children: PropTypes.node.isRequired,\n  flexFlow: PropTypes.string,\n  justifyContent: PropTypes.string,\n  alignItems: PropTypes.string,\n  flexWrap: PropTypes.string,\n  flexBasis: PropTypes.string,\n  flexGrow: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  flexShrink: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  ${({ css }) => css}\n`;\n","import React, { forwardRef } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { StyledForm } from './Form.style';\n\nexport const Form = forwardRef((props, ref) => {\n  return <StyledForm ref={ref} {...props} />;\n});\n\nForm.prototype = {\n  onSubmit: PropTypes.func,\n  css: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  ${({ css }) => css}\n`;\n","import React, { forwardRef } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { StyledInput } from './Input.style';\n\nexport const Input = forwardRef((props, ref) => {\n  return <StyledInput ref={ref} {...props} />;\n});\n\nInput.prototype = {\n  onChange: PropTypes.func,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  css: PropTypes.object,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  required: true,\n};\n","import styled from 'styled-components';\n\nexport const ModalSection = styled.section`\n  display: flex;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 2;\n\n  background-color: rgba(0, 0, 0, 0.5);\n  transition: opacity 0.25s ease;\n`;\n\nexport const ModalInnerDiv = styled.div`\n  position: relative;\n  overflow: auto;\n\n  ${({ css }) => css}\n\n  @media screen and (max-width: 768px) {\n    .modal-inner {\n      width: 90%;\n      height: 90%;\n      box-sizing: border-box;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 0;\n  position: absolute;\n  cursor: pointer;\n\n  width: 1.25rem;\n  height: 1.25rem;\n  right: 1.875rem;\n  top: 1.875rem;\n\n  & svg {\n    display: inline-block;\n    margin: 0;\n    padding: 0;\n\n    & path {\n      stroke: gray;\n      stroke-width: 5;\n    }\n  }\n`;\n\nexport const HiddenButtonName = styled.span`\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n\n  &:active,\n  hover {\n    clip: auto;\n    height: auto;\n    margin: 0;\n    overflow: visible;\n    position: static;\n    white-space: normal;\n    width: auto;\n  }\n`;\n","import React from 'react';\n\nimport { Button, HiddenButtonName } from './CloseButton.style';\n\nexport const ModalCloseButton = props => {\n  const { onClick } = props;\n\n  return (\n    <Button type=\"button\" aria-label=\"close-button\" onClick={() => onClick()}>\n      <svg aria-hidden=\"true\" viewBox=\"0 0 40 40\">\n        <path d=\"M 10, 10 L 30,30 M 30,10 L 10,30\" />\n      </svg>\n      <HiddenButtonName>닫기 버튼</HiddenButtonName>\n    </Button>\n  );\n};\n","import React from 'react';\n\nimport { ModalSection, ModalInnerDiv } from './Modal.style';\nimport { ModalCloseButton } from '../../CloseButton/CloseButton';\n\nexport const Modal = props => {\n  const { children, onClick, ...rest } = props;\n\n  const handleCloseModal = ({ currentTarget, target }) => {\n    const isDimmedClicked = currentTarget === target;\n\n    if (!isDimmedClicked) return;\n    onClick();\n  };\n\n  return (\n    <ModalSection\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby=\"title-dialog\"\n      onClick={handleCloseModal}\n    >\n      <ModalInnerDiv {...rest}>\n        <ModalCloseButton onClick={onClick} />\n        {children}\n      </ModalInnerDiv>\n    </ModalSection>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToggleButtonInput = styled.input`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + label #show-number-span {\n    background-color: #c71f1f;\n  }\n\n  &:checked + label #show-number-span:after {\n    left: calc(100% - 22px);\n    box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const ToggleButtonLabel = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ToggleButtonSpan = styled.span`\n  position: relative;\n  line-height: 2rem;\n  margin-left: 3px;\n  display: block;\n  width: 50px;\n  height: 26px;\n  border-radius: 60px;\n  background-color: #d3c5c5;\n  transition: background 0.4s;\n\n  &:after {\n    content: '';\n    position: absolute;\n    left: 4px;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 18px;\n    height: 18px;\n    border-radius: 100%;\n    background-color: #ffffff;\n    box-shadow: 1px 3px 4px rgba(0, 0, 0, 0.2);\n    transition: all 0.4s;\n  }\n`;\n","import React from 'react';\n\nimport { Flex } from '../..';\n\nimport {\n  ToggleButtonInput,\n  ToggleButtonLabel,\n  ToggleButtonSpan,\n} from './ToggleButton.style';\n\nexport const ShowNumberToggleButton = props => {\n  const { onChange } = props;\n\n  return (\n    <Flex alignItems=\"center\">\n      <ToggleButtonInput\n        id=\"show-details\"\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n\n      <ToggleButtonLabel htmlFor=\"show-details\">\n        <span>번호보기</span>\n        <ToggleButtonSpan id=\"show-number-span\"></ToggleButtonSpan>\n      </ToggleButtonLabel>\n    </Flex>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 2rem 0.5rem 0.5rem;\n`;\n\nexport const LottoList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 0.5rem;\n  padding: 0.6rem;\n  border: 0.5px solid #e9e2e2;\n  border-radius: 5px;\n\n  ${({ isShowNumbers }) =>\n    isShowNumbers &&\n    css`\n      flex-wrap: nowrap;\n      flex-direction: column;\n      max-height: 200px;\n      overflow-y: auto;\n    `}\n`;\n\nexport const LottoItem = styled.li`\n  display: flex;\n  margin-left: 0.25rem;\n  margin-right: 0.25rem;\n  font-size: 2.25rem;\n  line-height: 2.5rem;\n`;\n\nexport const LottoNumberDetails = styled.span`\n  font-size: 1.25rem;\n  margin-left: 12px;\n`;\n","import React, { useState } from 'react';\n\nimport { Flex } from '..';\nimport { ShowNumberToggleButton } from './ToggleButton/ToggleButton';\n\nimport {\n  Section,\n  LottoList,\n  LottoItem,\n  LottoNumberDetails,\n} from './LottoListContainer.style';\n\nexport const LottoListContainer = props => {\n  const { lottos } = props;\n\n  const [isShowNumbers, setIsShowNumbers] = useState(false);\n\n  const handleShowNumbers = () => setIsShowNumbers(!isShowNumbers);\n\n  const renderLottoList = () =>\n    lottos?.map((lotto, idx) => (\n      <LottoItem key={idx + 1}>\n        <span>🎟️ </span>\n        {isShowNumbers && (\n          <LottoNumberDetails>{lotto.join(' ')}</LottoNumberDetails>\n        )}\n      </LottoItem>\n    ));\n\n  return (\n    <Section aria-label=\"purchase-lotto\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <label>\n          총 <span>{lottos.length}</span>개를 구매하였습니다.\n        </label>\n        <ShowNumberToggleButton onChange={handleShowNumbers} />\n      </Flex>\n\n      <LottoList isShowNumbers={isShowNumbers}>{renderLottoList()}</LottoList>\n    </Section>\n  );\n};\n","export const LOTTO = {\n  UNIT: 1000,\n  BUNDLE_SIZE: 6,\n  START_NUM: 1,\n  END_NUM: 45,\n  MIN_PRICE: 1000,\n  MAX_PRICE: 50000,\n};\n\nexport const RANK = {\n  FIRST: 1,\n  SECOND: 2,\n  THIRD: 3,\n  FOURTH: 4,\n  FIFTH: 5,\n  OTHER: 0,\n};\n\nexport const PROFIT = {\n  FIRST: 2000000000,\n  SECOND: 30000000,\n  THIRD: 1500000,\n  FOURTH: 50000,\n  FIFTH: 5000,\n  OTHER: 0,\n};\n\nexport const MATCH_COUNT = {\n  BONUS: 0.5,\n  ONE: 1,\n  TWO: 2,\n  THREE: 3,\n  FOUR: 4,\n  FIVE: 5,\n  FIVE_BONUS: 5.5,\n  SIX: 6,\n};\n\nexport const RESULT_TABLE = {\n  FIRST: {\n    MATCH_COUNT: '6개',\n    PROFIT: '2,000,000,000',\n  },\n  SECOND: {\n    MATCH_COUNT: '5개 + 보너스볼',\n    PROFIT: '30,000,000',\n  },\n  THIRD: {\n    MATCH_COUNT: '5개',\n    PROFIT: '1,500,000',\n  },\n  FOURTH: {\n    MATCH_COUNT: '4개',\n    PROFIT: '50,000',\n  },\n  FIFTH: {\n    MATCH_COUNT: '3개',\n    PROFIT: '5,000',\n  },\n};\n","import {\n  LOTTO,\n  MATCH_COUNT,\n  PROFIT,\n  RANK,\n  RESULT_TABLE,\n} from '../constants/lotto';\n\nexport const getMatchedCounts = (lottos, winningNumbers) => {\n  return lottos.map(lotto => {\n    const isMatchedBonus = lotto.includes(winningNumbers.bonusNumber);\n    const matchingCount = lotto.filter(number =>\n      winningNumbers.numbers.includes(number),\n    ).length;\n\n    if (matchingCount === MATCH_COUNT.FIVE && isMatchedBonus) {\n      return matchingCount + MATCH_COUNT.BONUS;\n    }\n\n    return matchingCount;\n  });\n};\n\nexport const getRanks = matchingCount => {\n  return matchingCount.map(getRank);\n};\n\nexport const getTotalProfit = counts => {\n  const totalProfit = counts\n    .filter(count => count !== 0)\n    .reduce((sum, count) => (sum += getProfit(getRank(count))), 0);\n\n  const cost = counts.length * LOTTO.UNIT;\n  return ((totalProfit - cost) / cost) * 100;\n};\n\nconst getRank = count => {\n  return (\n    {\n      [MATCH_COUNT.SIX]: RANK.FIRST,\n      [MATCH_COUNT.FIVE_BONUS]: RANK.SECOND,\n      [MATCH_COUNT.FIVE]: RANK.THIRD,\n      [MATCH_COUNT.FOUR]: RANK.FOURTH,\n      [MATCH_COUNT.THREE]: RANK.FIFTH,\n    }[count] || RANK.OTHER\n  );\n};\n\nconst getProfit = rank => {\n  return (\n    {\n      [RANK.FIRST]: PROFIT.FIRST,\n      [RANK.SECOND]: PROFIT.SECOND,\n      [RANK.THIRD]: PROFIT.THIRD,\n      [RANK.FOURTH]: PROFIT.FOURTH,\n      [RANK.FIFTH]: PROFIT.FIFTH,\n    }[rank] || PROFIT.OTHER\n  );\n};\n\nexport const getLottoProfitResult = ranks => {\n  const table = {\n    [RANK.FIRST]: {\n      matchingCount: RESULT_TABLE.FIRST.MATCH_COUNT,\n      reward: RESULT_TABLE.FIRST.PROFIT,\n      wins: 0,\n    },\n    [RANK.SECOND]: {\n      matchingCount: RESULT_TABLE.SECOND.MATCH_COUNT,\n      reward: RESULT_TABLE.SECOND.PROFIT,\n      wins: 0,\n    },\n    [RANK.THIRD]: {\n      matchingCount: RESULT_TABLE.THIRD.MATCH_COUNT,\n      reward: RESULT_TABLE.THIRD.PROFIT,\n      wins: 0,\n    },\n    [RANK.FOURTH]: {\n      matchingCount: RESULT_TABLE.FOURTH.MATCH_COUNT,\n      reward: RESULT_TABLE.SECOND.PROFIT,\n      wins: 0,\n    },\n    [RANK.FIFTH]: {\n      matchingCount: RESULT_TABLE.FIFTH.MATCH_COUNT,\n      reward: RESULT_TABLE.FIFTH.PROFIT,\n      wins: 0,\n    },\n  };\n\n  ranks.forEach(rank => {\n    table[rank] && table[rank].wins++;\n  });\n\n  return table;\n};\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  border: 3px solid #eb7a7a;\n\n  & tr {\n    text-align: center;\n\n    & th,\n    td {\n      padding: 0.75rem;\n      border-bottom: 1.5px solid #f5bdbd;\n    }\n  }\n`;\n","import React from 'react';\n\nimport {\n  getLottoProfitResult,\n  getRanks,\n} from '../../../services/winningResult';\n\nimport { Table } from './Table.style';\n\nexport const RewardTable = props => {\n  const { counts } = props;\n\n  const getRewardResults = () => {\n    const profitResults = getLottoProfitResult(getRanks(counts));\n\n    return Object.values(profitResults).map(\n      ({ matchingCount, reward, wins }) => (\n        <tr key={matchingCount}>\n          <td>{matchingCount}</td>\n          <td>{reward}</td>\n          <td>\n            <span>{wins}</span>개\n          </td>\n        </tr>\n      ),\n    );\n  };\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>일치 갯수</th>\n          <th>당첨금</th>\n          <th>당첨 갯수</th>\n        </tr>\n      </thead>\n      <tbody>{getRewardResults()}</tbody>\n    </Table>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const ProfitMessage = styled.p`\n  text-align: center;\n\n  & span {\n    margin: 0 0.3rem;\n    font-weight: bold;\n    color: #c71f1f;\n  }\n`;\n","import React from 'react';\n\nimport { Flex, Button } from '..';\nimport { RewardTable } from './Table/Table';\n\nimport { getMatchedCounts, getTotalProfit } from '../../services/winningResult';\n\nimport { Title, ProfitMessage } from './LottoRewardsContainer.style';\n\nexport const LottoRewardsContainer = props => {\n  const { lottos, winningNumbers, onClick } = props;\n\n  const counts = getMatchedCounts(lottos, winningNumbers);\n\n  return (\n    <>\n      <Title id=\"title-dialog\">🏆 당첨 통계 🏆</Title>\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <RewardTable counts={counts} />\n      </Flex>\n\n      <ProfitMessage>\n        당신의 총 수익률은\n        <span>{getTotalProfit(counts).toFixed(2)}</span>\n        %입니다.\n      </ProfitMessage>\n\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Button type=\"reset\" onClick={onClick}>\n          다시 시작하기\n        </Button>\n      </Flex>\n    </>\n  );\n};\n","export const MESSAGE = {\n  SELECT_WINNING_NUMBER: '6개의 번호를 선택해주세요',\n  DUPLICATED_WINNING_NUMBER: '보너스 번호는 중복된 번호입니다.',\n  EXCEEDED_LOTTO_COUNT: '이미 6개의 숫자를 선택하였습니다.',\n  CONFIRM_RESTART: '다시 시작하시겠습니까?',\n  INPUT_PLACEHOLDER: '1,000원 단위로 입력해주세요',\n};\n","import { css } from 'styled-components';\n\nexport const formCss = css`\n  margin: 0.5rem;\n\n  & label {\n    display: inline-block;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nexport const inputCss = css`\n  width: 100%;\n  margin-right: 0.2rem;\n  padding-left: 0.5rem;\n`;\n","import React, { useRef, useEffect } from 'react';\n\nimport { Button, Flex, Input, Form } from '..';\n\nimport { LOTTO } from '../../constants/lotto';\nimport { MESSAGE } from '../../constants/messages';\n\nimport { formCss, inputCss } from './PurchaseContainer.style';\n\nexport const PurchaseContainer = props => {\n  const { onSubmit, disabled } = props;\n\n  const formRef = useRef();\n  const inputRef = useRef();\n\n  useEffect(() => {\n    if (!disabled) {\n      formRef.current.reset();\n      inputRef.current.focus();\n    }\n  }, [disabled]);\n\n  const handlePurchaseLottoInput = e => {\n    e.preventDefault();\n\n    onSubmit(e.target.elements.price.value);\n  };\n\n  return (\n    <Form ref={formRef} onSubmit={handlePurchaseLottoInput} css={formCss}>\n      <label htmlFor=\"input-price\">구입할 금액을 입력해주세요.</label>\n      <Flex>\n        <Input\n          ref={inputRef}\n          type=\"number\"\n          name=\"price\"\n          placeholder={MESSAGE.INPUT_PLACEHOLDER}\n          required\n          disabled={disabled}\n          autoFocus\n          min={LOTTO.MIN_PRICE}\n          max={LOTTO.MAX_PRICE}\n          step={LOTTO.UNIT}\n          css={inputCss}\n        />\n        <Button disabled={disabled}>확인</Button>\n      </Flex>\n    </Form>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nexport const BonusNumberWrapper = styled.div`\n  margin-bottom: 1rem;\n\n  & p {\n    margin-top: 1rem;\n    margin-bottom: 0.2rem;\n    text-align: center;\n    font-weight: bold;\n  }\n`;\n\nexport const InputCss = css`\n  margin-right: 0.25rem;\n  margin-left: 0.25rem;\n  text-align: center;\n  width: 40px;\n  height: 36px;\n  font-size: 1rem;\n  font-weight: bold;\n  color: #c71f1f;\n\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n`;\n","import React from 'react';\n\nimport { Flex, Input } from '../..';\n\nimport { BonusNumberWrapper, InputCss } from './BonusNumberInput.style';\n\nimport { LOTTO } from '../../../constants/lotto';\n\nexport const BonusNumberInput = () => {\n  return (\n    <BonusNumberWrapper>\n      <p>보너스 번호</p>\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Input\n          type=\"number\"\n          name=\"bonus-number\"\n          aria-label=\"winning number bonus\"\n          required\n          min={LOTTO.START_NUM}\n          max={LOTTO.END_NUM}\n          css={InputCss}\n        />\n      </Flex>\n    </BonusNumberWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 95%;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  position: relative;\n  width: 1.5rem;\n  height: 1.5rem;\n  line-height: 1.5rem;\n  margin: 4px;\n  padding: 4px;\n  font-size: 1rem;\n  text-align: center;\n  border: 2px solid #d3c5c5;\n  border-radius: 50%;\n  background-color: #d3c5c5;\n\n  &:hover {\n    box-sizing: content-box;\n    border: 2px solid #c71f1f;\n  }\n`;\n\nexport const Checkbox = styled.input`\n  position: absolute;\n  opacity: 0;\n\n  &:checked + ${Label} {\n    border: 2px solid #c71f1f;\n    background-color: #c71f1f;\n    color: #fce9e9;\n    font-weight: bold;\n  }\n`;\n","import React from 'react';\n\nimport { LOTTO } from '../../../constants/lotto';\n\nimport { Ul, Checkbox, Label } from './NumberList.style';\n\nexport const NumberList = props => {\n  const { numbers, onChange } = props;\n\n  const handleSelectNumbers = ({ target: { name } }) => onChange(Number(name));\n\n  return (\n    <Ul>\n      {Array.from({ length: LOTTO.END_NUM }, (_, idx) => {\n        return (\n          <li key={idx + 1}>\n            <Checkbox\n              type=\"checkbox\"\n              id={`winningNumber${idx + 1}`}\n              name={idx + 1}\n              onChange={handleSelectNumbers}\n              checked={numbers.includes(idx + 1)}\n            />\n            <Label htmlFor={`winningNumber${idx + 1}`}>{idx + 1}</Label>\n          </li>\n        );\n      })}\n    </Ul>\n  );\n};\n","import styled, { css } from 'styled-components';\n\nexport const FormCss = css`\n  margin: 2rem 0.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem 0;\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1), 0 6px 6px rgba(0, 0, 0, 0.1);\n  border: 0.5px solid rgba(233, 226, 226, 0.3);\n\n  & h2 {\n    margin-top: 0.5rem;\n    margin-bottom: 0;\n    font-size: 1.5rem;\n  }\n`;\n\nexport const SelectNumberList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 95%;\n  text-align: center;\n  justify-content: center;\n`;\n","import React from 'react';\n\nimport { useSelectNumbers } from '../../hooks/useSelectNumbers';\n\nimport { Form, Button } from '..';\nimport { BonusNumberInput } from './BonusNumberInput/BonusNumberInput';\nimport { NumberList } from './NumberList/NumberList';\n\nimport { FormCss } from './WinningNumbersContainer.style';\n\nimport { LOTTO } from '../../constants/lotto';\nimport { MESSAGE } from '../../constants/messages';\n\nexport const WinningNumbersContainer = props => {\n  const { onSubmit } = props;\n\n  const [numbers, handleSelectNumbers] = useSelectNumbers();\n\n  const handleSubmitWinningNumbers = e => {\n    e.preventDefault();\n\n    const bonusNumber = Number(e.target.elements['bonus-number'].value);\n\n    if (numbers.length !== LOTTO.BUNDLE_SIZE) {\n      alert(MESSAGE.SELECT_WINNING_NUMBER);\n      return;\n    }\n\n    if (numbers.includes(bonusNumber)) {\n      alert(MESSAGE.DUPLICATED_WINNING_NUMBER);\n      return;\n    }\n\n    onSubmit(numbers, bonusNumber);\n  };\n\n  return (\n    <Form onSubmit={handleSubmitWinningNumbers} css={FormCss}>\n      <h2>당첨번호 입력하기</h2>\n      <p>당첨 번호 6개를 선택하고, 보너스 번호를 입력해주세요</p>\n      <NumberList onChange={handleSelectNumbers} numbers={numbers} />\n      <BonusNumberInput />\n      <Button size=\"LARGE\">결과 확인하기</Button>\n    </Form>\n  );\n};\n","import { useState } from 'react';\n\nimport { LOTTO } from '../constants/lotto';\nimport { MESSAGE } from '../constants/messages';\n\nexport const useSelectNumbers = () => {\n  const [numbers, setNumbers] = useState([]);\n\n  const handleSelectNumbers = pickedNumber => {\n    const prevNumbers = numbers;\n\n    const newNumbers = numbers.find(number => number === pickedNumber)\n      ? prevNumbers.filter(number => number !== pickedNumber)\n      : [...prevNumbers, pickedNumber];\n\n    if (newNumbers.length === LOTTO.BUNDLE_SIZE + 1) {\n      alert(MESSAGE.EXCEEDED_LOTTO_COUNT);\n      return;\n    }\n\n    setNumbers(newNumbers);\n  };\n\n  return [numbers, handleSelectNumbers];\n};\n","import styled, { css } from 'styled-components';\n\nexport const MainSection = styled.section`\n  max-width: 28.125rem;\n  margin: 0 auto;\n\n  & h1 {\n    text-align: center;\n  }\n`;\n\nexport const WidthFullDiv = styled.div`\n  width: 100%;\n`;\n\nexport const ModalInnerCss = css`\n  border-radius: 5px;\n  max-width: 21.875rem;\n  background-color: #fff;\n  margin: auto;\n  padding: 2.5rem;\n  transition: top 0.25s ease;\n`;\n","import React, { useState } from 'react';\n\nimport {\n  Flex,\n  Modal,\n  PurchaseContainer,\n  LottoListContainer,\n  WinningNumbersContainer,\n  LottoRewardsContainer,\n} from './components';\n\nimport { useModal } from './hooks/useModal';\n\nimport { createLottos } from './services/lottoPurchase';\n\nimport { MESSAGE } from './constants/messages';\n\nimport { MainSection, WidthFullDiv, ModalInnerCss } from './App.style';\n\nconst App = () => {\n  const [lottos, setLottos] = useState([]);\n  const [winningNumbers, setWinningNumbers] = useState({\n    numbers: [],\n    bonusNumber: 0,\n  });\n\n  const [isModalOpen, handleModalOpen, handleModalClosed] = useModal();\n\n  const initState = () => {\n    setLottos([]);\n    setWinningNumbers({ numbers: [], bonusNumber: 0 });\n    handleModalClosed();\n  };\n\n  const handlePurchaseLotto = inputPrice => {\n    setLottos(createLottos(inputPrice));\n  };\n\n  const handleWinningNumber = (numbers, bonusNumber) => {\n    setWinningNumbers({ numbers, bonusNumber });\n    handleModalOpen();\n  };\n\n  const handleRestart = () => {\n    if (window.confirm(MESSAGE.CONFIRM_RESTART)) {\n      initState();\n    }\n  };\n\n  return (\n    <MainSection>\n      <h1>🎱 행운의 로또</h1>\n      <Flex flexDirection=\"column\" alignItems=\"center\">\n        <WidthFullDiv>\n          <PurchaseContainer\n            onSubmit={handlePurchaseLotto}\n            disabled={!!lottos.length}\n          />\n\n          {!!lottos.length && (\n            <>\n              <LottoListContainer lottos={lottos} />\n              <WinningNumbersContainer onSubmit={handleWinningNumber} />\n            </>\n          )}\n        </WidthFullDiv>\n      </Flex>\n\n      {isModalOpen && (\n        <Modal onClick={handleModalClosed} css={ModalInnerCss}>\n          <LottoRewardsContainer\n            lottos={lottos}\n            winningNumbers={winningNumbers}\n            onClick={handleRestart}\n          />\n        </Modal>\n      )}\n    </MainSection>\n  );\n};\n\nexport default App;\n","import { useState } from 'react';\n\nexport const useModal = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleModalOpen = () => setIsModalOpen(true);\n  const handleModalClosed = () => setIsModalOpen(false);\n\n  return [isModalOpen, handleModalOpen, handleModalClosed];\n};\n","import { LOTTO } from '../constants/lotto';\nimport { getRandomNumber } from '../utils/index';\n\nexport const createLottos = price => {\n  const lottoCount = Math.floor(price / LOTTO.UNIT);\n\n  const lottos = Array.from({ length: lottoCount }, () => {\n    const lotto = new Set();\n    while (lotto.size < LOTTO.BUNDLE_SIZE) {\n      lotto.add(getRandomNumber(LOTTO.START_NUM, LOTTO.END_NUM));\n    }\n    return [...lotto].sort((a, b) => a - b);\n  });\n\n  return lottos;\n};\n","export const getRandomNumber = (start, end) =>\n  Math.floor(Math.random() * end) + start;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}